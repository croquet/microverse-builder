"use strict";(globalThis.webpackChunk_croquet_microverse=globalThis.webpackChunk_croquet_microverse||[]).push([[938],{938:(e,t,s)=>{s.r(t),s.d(t,{default:()=>a});const a={modules:[{name:"Light",pawnBehaviors:[class LightPawn{setup(){console.log("LightPawn");var e=this.service("ThreeRenderManager"),t=e.scene,e=e.camera;let s=this.shape;this.removeLights(),this.setupCSM(t,e,Worldcore.THREE);t=new Worldcore.THREE.AmbientLight(16777215,.5),s.add(t),this.lights.push(t),this.constructBackground(this.actor._cardData),e=this._behavior.module.externalName;this.addUpdateRequest([e+"$LightPawn","update"]),this.listen("updateShape","updateShape")}removeLights(){this.lights&&this.lights.forEach(e=>{this.shape.remove(e)}),this.lights=[]}destroy(){console.log("destroy lights"),this.background&&this.background.dispose(),this.removeLights()}updateShape(e){this.constructBackground(e)}constructBackground(t){let s=this.service("AssetManager").assetManager,a=t.dataType;if(t.dataLocation)return this.getBuffer(t.dataLocation).then(e=>s.load(e,a,Worldcore.THREE,t).then(e=>{var t=this.service("ThreeRenderManager"),s=t.renderer;let a=t.scene,r=new Worldcore.THREE.PMREMGenerator(s);r.compileEquirectangularShader();t=r.fromEquirectangular(e).texture;let i=a.background,h=a.environment;a.background=t,a.environment=t,h!==i&&i&&i.dispose(),h&&h.dispose(),e.dispose()}))}setupCSM(e,t,s){this.csm&&(this.csm.remove(),this.csm=null);var a=new s.Vector3(-2,-2,-.5);this.csm=new s.CSM({fade:!0,far:t.far,maxFar:1e3,cascades:3,shadowMapSize:2048,shadowbias:25e-5,lightDirection:a,camera:t,parent:e,lightIntensity:.6,lightFar:1e3,mode:"practical"}),this.csm.update()}update(e){this.csm&&this.csm.update()}}]}]}}}]);